{"version":3,"file":"static/js/872.12e535d7.chunk.js","mappings":"gSAYe,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBMC,GAAO,IAAIC,MAAOC,cACxB,OACE,iBAAKC,UAAU,WAAf,WACE,gBAAKA,UAAU,gBAAf,UACE,iBAAKA,UAAU,eAAf,WACE,iBAAKA,UAAU,UAAf,WACE,gBAAKA,UAAU,eAAeC,IAAI,eAClC,wBAAKC,EAAAA,GAAAA,WAEP,gBAAKF,UAAU,eAAf,UACE,UAAC,IAAD,CACEG,KAAK,eACLC,cAAe,CAAEC,UAAU,GAC3BC,SA3BK,SAACC,GAChB,IAAQC,EAAaD,EAAbC,SACR,GAAiB,UAAbA,GAAqC,WAAbA,EAC1B,OAAOC,EAAAA,GAAAA,KAAa,0DAEtBb,GAAW,GACXc,YAAW,WACT,IACMC,EAAO,CAAEC,MADJ,UAAMJ,EAAN,aAAkB,IAAIV,MAAOe,YAClBL,SAAAA,GACtBlB,GAASwB,EAAAA,EAAAA,IAAMH,IACff,GAAW,GACXJ,EAAS,QAAS,CAAEuB,SAAS,GAC9B,GAAE,IACJ,EAeWC,KAAK,QAJP,WAME,gBAAKhB,UAAU,qBAAf,UACE,SAAC,SAAD,CACEG,KAAK,WACLc,MAAO,CAAC,CAAEC,UAAU,EAAMT,QAAS,gCAFrC,UAIE,SAAC,IAAD,CAAOU,QAAQ,SAACC,EAAA,EAAD,IAAkBC,YAAY,6CAGjD,gBAAKrB,UAAU,qBAAf,UACE,SAAC,SAAD,CACEG,KAAK,WACLc,MAAO,CAAC,CAAEC,UAAU,EAAMT,QAAS,gCAFrC,UAIE,SAAC,IAAD,CAAOU,QAAQ,SAACG,EAAA,EAAD,IAAkBC,KAAK,WAAWF,YAAY,2BAGjE,gBAAKrB,UAAU,qBAAf,UACE,SAAC,SAAD,WACE,SAAC,IAAD,CAAQuB,KAAK,UAAU5B,QAASA,EAAS6B,SAAS,SAASxB,UAAU,uBAArE,0CASZ,mBAAQA,UAAU,kBAAlB,UACE,2DAAYH,EAAZ,8CAIP,C","sources":["views/login/index.tsx"],"sourcesContent":["import './index.less'\nimport { LockOutlined, UserOutlined } from '@ant-design/icons'\nimport { Button, Form, Input, message } from 'antd'\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { login } from '@/store/modules/app'\nimport { useDispatch } from 'react-redux'\nimport { appConfig } from '@/config'\ntype LoginType = {\n  username: string\n  password: string\n}\nexport default function Login() {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const [loading, setLoading] = useState(false)\n\n  const onFinish = (values: LoginType) => {\n    const { username } = values\n    if (username !== 'admin' && username !== 'vangle') {\n      return message.warn('用户名或密码有误！')\n    }\n    setLoading(true)\n    setTimeout(() => {\n      const token = `${username}.${new Date().toString()}`\n      const user = { token, username }\n      dispatch(login(user))\n      setLoading(false)\n      navigate('/home', { replace: true })\n    }, 1000)\n  }\n  const year = new Date().getFullYear()\n  return (\n    <div className=\"ra-login\">\n      <div className=\"ra-login-main\">\n        <div className=\"ra-login-box\">\n          <div className=\"ra-logo\">\n            <img className=\"ra-logo-icon\" src=\"/logo.png\" />\n            <h1>{appConfig.name}</h1>\n          </div>\n          <div className=\"ra-logo-form\">\n            <Form\n              name=\"normal_login\"\n              initialValues={{ remember: true }}\n              onFinish={onFinish}\n              size=\"large\"\n            >\n              <div className=\"ra-login-form-item\">\n                <Form.Item\n                  name=\"username\"\n                  rules={[{ required: true, message: 'Please input your Username!' }]}\n                >\n                  <Input prefix={<UserOutlined />} placeholder=\"用户名: admin or vangle\" />\n                </Form.Item>\n              </div>\n              <div className=\"ra-login-form-item\">\n                <Form.Item\n                  name=\"password\"\n                  rules={[{ required: true, message: 'Please input your Password!' }]}\n                >\n                  <Input prefix={<LockOutlined />} type=\"password\" placeholder=\"密码: any\" />\n                </Form.Item>\n              </div>\n              <div className=\"ra-login-form-item\">\n                <Form.Item>\n                  <Button type=\"primary\" loading={loading} htmlType=\"submit\" className=\"ra-login-form-button\">\n                    登 录\n                  </Button>\n                </Form.Item>\n              </div>\n            </Form>\n          </div>\n        </div>\n      </div>\n      <footer className=\"ra-login-footer\">\n        <span>版权所有©{year}保留所有权利</span>\n      </footer>\n    </div>\n  )\n}\n"],"names":["Login","dispatch","useDispatch","navigate","useNavigate","useState","loading","setLoading","year","Date","getFullYear","className","src","appConfig","name","initialValues","remember","onFinish","values","username","message","setTimeout","user","token","toString","login","replace","size","rules","required","prefix","UserOutlined","placeholder","LockOutlined","type","htmlType"],"sourceRoot":""}